openapi: 3.0.0
info:
  title: Banner service
  version: 1.0.0
paths:
  /user_banner:
    get:
      summary: Getting a banner for the user
      parameters:
        - in: query
          name: tag_id
          required: true
          schema:
            type: integer
            description: User tag
        - in: query
          name: feature_id
          required: true
          schema:
            type: integer
            description: Feature ID
        - in: query
          name: use_last_revision
          required: false
          schema:
            type: boolean
            default: false
            description: Receive up-to-date information 
        - in: header
          name: token
          description: User token
          schema:
            type: string
            example: "user_token"
      responses:
        '200':
          description: User banner
          content:
            application/json:
              schema:
                description: JSON banner display
                type: object
                additionalProperties: true
                example: '{"title": "some_title", "text": "some_text", "url": "some_url"}'
        '400':
          description: Incorrect data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: User not authorised
        '403':
          description: User does not have access
        '404':
          description: Banner not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /banner:
    get:
      summary: Get all banners filtered by feature and/or tag
      parameters:
        - in: header
          name: token
          description: Admin token
          schema:
            type: string
            example: "admin_token"
        - in: query
          name: feature_id
          required: false
          schema:
            type: integer
            description: Feature ID
        - in: query
          name: tag_id
          required: false
          schema:
            type: integer
            description: Tag ID
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            description: Limit
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            description: Offset
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    banner_id:
                      type: integer
                      description: Banner ID
                    tag_ids:
                      type: array
                      description: Tag IDs
                      items:
                        type: integer
                    feature_id:
                      type: integer
                      description: Feature ID
                    content:
                      type: object
                      description: Banner content
                      additionalProperties: true
                      example: '{"title": "some_title", "text": "some_text", "url": "some_url"}'
                    is_active:
                      type: boolean
                      description: Banner activity flag
                    created_at:
                      type: string
                      format: date-time
                      description: Date of banner creation
                    updated_at:
                      type: string
                      format: date-time
                      description: Banner update date
        '401':
          description: User not authorised
        '403':
          description: User does not have access
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      summary: Creating a new banner
      parameters:
        - in: header
          name: token
          description: Admin token
          schema:
            type: string
            example: "admin_token"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_ids:
                  type: array
                  description: Tag IDs
                  items:
                    type: integer
                feature_id:
                  type: integer
                  description: Feature ID
                content:
                  type: object
                  description: Banner content
                  additionalProperties: true
                  example: '{"title": "some_title", "text": "some_text", "url": "some_url"}'
                is_active:
                  type: boolean
                  description: Banner activity flag
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  banner_id:
                    type: integer
                    description: Identifier of the created banner
        '400':
          description: Incorrect data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: User not authorised
        '403':
          description: User does not have access
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /banner/{id}:
    patch:
      summary: Updating the banner content
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            description: Banner ID
        - in: header
          name: token
          description: Admin token
          schema:
            type: string
            example: "admin_token"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_ids:
                  nullable: true
                  type: array
                  description: Tag IDs
                  items:
                    type: integer
                feature_id:
                  nullable: true
                  type: integer
                  description: Feature ID
                content:
                  nullable: true
                  type: object
                  description: Banner content
                  additionalProperties: true
                  example: '{"title": "some_title", "text": "some_text", "url": "some_url"}'
                is_active:
                  nullable: true
                  type: boolean
                  description: Banner activity flag
      responses:
        '200':
          description: OK
        '400':
          description: Incorrect data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: User not authorised
        '403':
          description: User does not have access
        '404':
          description: Banner not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      summary: Deleting a banner by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            description: Banner ID
        - in: header
          name: token
          description: Admin token
          schema:
            type: string
            example: "admin_token"
      responses:
        '204':
          description: The banner has been successfully removed
        '400':
          description: Incorrect data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: User not authorised
        '403':
          description: User does not have access
        '404':
          description: Banner for tag not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
